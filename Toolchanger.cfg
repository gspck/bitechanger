[include Toolchanger/T0.cfg]
#[include Toolchanger/T1.cfg]
#[include Toolchanger/T2.cfg]
#[include Toolchanger/T3.cfg]
#[include Toolchanger/T4.cfg]
[include Toolchanger/TOOLCHANGER_VARIABLES.cfg]

##macros




[gcode_macro DOCK_TOOL]
gcode:
  {% set angle_open = printer["gcode_macro TC_CONFIG"].servo_angle_open %}
  {% set angle_closed = printer["gcode_macro TC_CONFIG"].servo_angle_closed %}
  
  {% set active_tool = printer["gcode_macro VAR"].active_tool %}
  
  {% set T0_dock_location_x = printer["gcode_macro TC_CONFIG"].t0_dock_location_x %}
  {% set T0_dock_location_y = printer["gcode_macro TC_CONFIG"].t0_dock_location_y %}

  {% set T1_dock_location_x = printer["gcode_macro TC_CONFIG"].t1_dock_location_x %}
  {% set T1_dock_location_y = printer["gcode_macro TC_CONFIG"].t1_dock_location_y %}

  {% set T2_dock_location_x = printer["gcode_macro TC_CONFIG"].t2_dock_location_x %}
  {% set T2_dock_location_y = printer["gcode_macro TC_CONFIG"].t2_dock_location_y %}

  {% set T3_dock_location_x = printer["gcode_macro TC_CONFIG"].t3_dock_location_x %}
  {% set T3_dock_location_y = printer["gcode_macro TC_CONFIG"].t3_dock_location_y %}

  {% set T4_dock_location_x = printer["gcode_macro TC_CONFIG"].t4_dock_location_x %}
  {% set T4_dock_location_y = printer["gcode_macro TC_CONFIG"].t4_dock_location_y %} 

  {% if active_tool == 0 %}
    {% set dock_location_x = T0_dock_location_x %}
    {% set dock_location_y = T0_dock_location_y %}
  {% elif active_tool == 1 %}
    {% set dock_location_x = T1_dock_location_x %}
    {% set dock_location_y = T1_dock_location_y %}
  {% elif active_tool == 2 %}
    {% set dock_location_x = T2_dock_location_x %}
    {% set dock_location_y = T2_dock_location_y %}
  {% elif active_tool == 3 %}
    {% set dock_location_x = T3_dock_location_x %}
    {% set dock_location_y = T3_dock_location_y %}
  {% elif active_tool == 4 %}
    {% set dock_location_x = T4_dock_location_x %}
    {% set dock_location_y = T4_dock_location_y %}
  {% elif active_tool == 5 %}
     Respond TYPE=command MSG=" Tools already docked "
  {% endif %}


  SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=0
  
  
  
  
  {% if active_tool != 5 %}
    {% if  printer.toolhead.axis_maximum.z - 5 >= printer.toolhead.position.z %}
      G91
      G1 Z+5 F300
      G90
    {% else %}
      G91
      G1 Z{printer.toolhead.axis_maximum.z - printer['gcode_move'].gcode_position.z} F300
      G90
    {% endif %}
    G1 X{dock_location_x} Y{dock_location_y + 90} F9000
    G1 Y{dock_location_y + 12.5}F5000
    G1 Y{dock_location_y } F1000
    SET_SERVO SERVO=TC_SERVO ANGLE={angle_open}
    G4 P200
    G1 Y{dock_location_y + 45} F1000
    G1 Y{dock_location_y+90} F9000
    SET_SERVO SERVO=TC_SERVO ANGLE={angle_closed}
    SET_GCODE_VARIABLE MACRO=VAR VARIABLE=active_tool VALUE=5  
  {% endif %}
 #add microswitch check
  SET_GCODE_VARIABLE MACRO=VAR VARIABLE=active_tool VALUE=5
  SET_GCODE_VARIABLE MACRO=VAR VARIABLE=previous_tool VALUE={active_tool}
  SAVE_VARIABLE VARIABLE=active_tool VALUE=5


[gcode_macro PICK_UP_TOOL]
gcode:
  
  {% set previous_tool = printer["gcode_macro VAR"].previous_tool %}
  {% set destination = params.TOOL|default("previous_tool")|int %}    #
  {% set angle_open = printer["gcode_macro TC_CONFIG"].servo_angle_open %}
  {% set angle_closed = printer["gcode_macro TC_CONFIG"].servo_angle_closed %}
  RESPOND TYPE=command MSG=" destination is {destination} "
  
  {% set active_tool = printer["gcode_macro VAR"].active_tool %}
  
  {% set T0_dock_location_x = printer["gcode_macro TC_CONFIG"].t0_dock_location_x %}
  {% set T0_dock_location_y = printer["gcode_macro TC_CONFIG"].t0_dock_location_y %}

  {% set T1_dock_location_x = printer["gcode_macro TC_CONFIG"].t1_dock_location_x %}
  {% set T1_dock_location_y = printer["gcode_macro TC_CONFIG"].t1_dock_location_y %}

  {% set T2_dock_location_x = printer["gcode_macro TC_CONFIG"].t2_dock_location_x %}
  {% set T2_dock_location_y = printer["gcode_macro TC_CONFIG"].t2_dock_location_y %}

  {% set T3_dock_location_x = printer["gcode_macro TC_CONFIG"].t3_dock_location_x %}
  {% set T3_dock_location_y = printer["gcode_macro TC_CONFIG"].t3_dock_location_y %}

  {% set T4_dock_location_x = printer["gcode_macro TC_CONFIG"].t4_dock_location_x %}
  {% set T4_dock_location_y = printer["gcode_macro TC_CONFIG"].t4_dock_location_y %}

  
    {% if destination == 0 %}
      {% set dock_location_x = T0_dock_location_x %}
      {% set dock_location_y = T0_dock_location_y %}
    {% elif destination == 1 %}
      {% set dock_location_x = T1_dock_location_x %}
      {% set dock_location_y = T1_dock_location_y %}
    {% elif destination == 2 %}
      {% set dock_location_x = T2_dock_location_x %}
      {% set dock_location_y = T2_dock_location_y %}
    {% elif destination == 3 %}
      {% set dock_location_x = T3_dock_location_x %}
      {% set dock_location_y = T3_dock_location_y %}
    {% elif destination == 4 %}
      {% set dock_location_x = T4_dock_location_x %}
      {% set dock_location_y = T4_dock_location_y %}
    {% elif destination == 5 %}
     Respond TYPE=command MSG=" T5 is no hardwaretool it is used to describe the toolless state of the carriage "
    {% endif %}
  {% if active_tool == 5 %}   
    G1 X{dock_location_x} Y{dock_location_y + 90} F9000
    G1 Y{dock_location_y+35} F3000
    SET_SERVO SERVO=TC_SERVO ANGLE={angle_open}
    G1 Y{dock_location_y}  F1200
    SET_SERVO SERVO=TC_SERVO ANGLE={angle_closed}
    G4 P100
    G1 Y{dock_location_y+15}
    G1 Y0 F9000
    #SET_SERVO SERVO=TC_SERVO ANGLE={angle_open}
    #G4 P250
    #SET_SERVO SERVO=TC_SERVO ANGLE={angle_closed}  #versuch der steigerung der wiederholgenauigkeit
    #G4 P250
    SET_GCODE_VARIABLE MACRO=VAR VARIABLE=active_tool VALUE={destination}
    SET_GCODE_VARIABLE MACRO=VAR VARIABLE=previous_tool VALUE=5
    SAVE_VARIABLE VARIABLE=active_tool VALUE={destination}
    SET_GCODE_OFFSET_FOR T={destination}
  {% else %}
    {% if active_tool == destination %}
      Respond TYPE=command MSG=" requested tool is already picked up "  
    {% else %}  
      {% if destination != 5 %}
        RESPOND TYPE=error MSG="dock loaded tool first"
      {% endif %}
    {% endif %}
  {% endif %}
  #Add microswitch check +gcode offset and aktivate extruder
  






[gcode_macro SET_GCODE_OFFSET_FOR]

gcode:
  {% set tool = params.T|int %}
  
  {% set t0_offset_x = printer["gcode_macro TC_CONFIG"].t0_offset_x %}
  {% set t0_offset_y = printer["gcode_macro TC_CONFIG"].t0_offset_y %}
  {% set t0_offset_z = printer["gcode_macro TC_CONFIG"].t0_offset_z %}

  {% set t1_offset_x = printer["gcode_macro TC_CONFIG"].t1_offset_x %}
  {% set t1_offset_y = printer["gcode_macro TC_CONFIG"].t1_offset_y %}
  {% set t1_offset_z = printer["gcode_macro TC_CONFIG"].t1_offset_z %}

  {% set t2_offset_x = printer["gcode_macro TC_CONFIG"].t2_offset_x %}
  {% set t2_offset_y = printer["gcode_macro TC_CONFIG"].t2_offset_y %}
  {% set t2_offset_z = printer["gcode_macro TC_CONFIG"].t2_offset_z %}

  {% set t3_offset_x = printer["gcode_macro TC_CONFIG"].t3_offset_x %}
  {% set t3_offset_y = printer["gcode_macro TC_CONFIG"].t3_offset_y %}
  {% set t3_offset_z = printer["gcode_macro TC_CONFIG"].t3_offset_z %}

  {% set t4_offset_x = printer["gcode_macro TC_CONFIG"].t4_offset_x %}
  {% set t4_offset_y = printer["gcode_macro TC_CONFIG"].t4_offset_y %}
  {% set t4_offset_z = printer["gcode_macro TC_CONFIG"].t4_offset_z %}
  
  
  {% if tool == 0 %}
    {% set x_offset = t0_offset_x %}
    {% set y_offset = t0_offset_y %}
    {% set z_offset = t0_offset_z %}
  {% elif tool == 1 %}
    {% set x_offset = t1_offset_x %}
    {% set y_offset = t1_offset_y %}
    {% set z_offset = t1_offset_z %}
  {% elif tool == 2 %}
    {% set x_offset = t2_offset_x %}
    {% set y_offset = t2_offset_y %}
    {% set z_offset = t2_offset_z %}
  {% elif tool == 3 %}
    {% set x_offset = t3_offset_x %}
    {% set y_offset = t3_offset_y %}
    {% set z_offset = t3_offset_z %}
  {% elif tool == 4 %}
    {% set x_offset = t4_offset_x %}
    {% set y_offset = t4_offset_y %}
    {% set z_offset = t4_offset_z %}
  {% endif %}
  
  Respond TYPE=command MSG=" x offset = {x_offset} "
  Respond TYPE=command MSG=" Y offset = {y_offset}  "
  Respond TYPE=command MSG=" z offset = {z_offset} "


  SET_GCODE_OFFSET X={x_offset} Y={y_offset} Z={z_offset} MOVE=0










##calibration macros
[gcode_macro OFFSET_CALIBRATION_Z]
gcode:
  #G28 
  #Z_TILT_ADJUST
  
  {% if printer.configfile.settings["T0.cfg"] %} #checks  if T0 is defined
    {% set check_T0 = 1 %}
    T0
    _OFFSET_CALIBRATION_Z
     RESPOND TYPE=command MSG=" T0 calibrated "
  {% else %}
    RESPOND TYPE=error MSG=" T0 has to be defined for automated z calibration "
    {% set check_T0 = 0 %}
  {% endif %}

  
  
  {% if printer.configfile["T1.cfg"] and check_T0 == 1 %} #checks if T1 is defined and if T0 was defined
    T1
    _OFFSET_CALIBRATION_Z
     RESPOND TYPE=command MSG=" T1 calibrated "
  {% else %}
  
  {% endif %}  

  
  
  {% if printer.configfile["T2.cfg"] and check_T0 == 1 %}
    T2
    _OFFSET_CALIBRATION_Z
     RESPOND TYPE=command MSG=" T2 calibrated "
  {% else %}
  
  {% endif %} 

  
  
  {% if printer.configfile["T3.cfg"] and check_T0 == 1 %}
    T3
    _OFFSET_CALIBRATION_Z
     RESPOND TYPE=command MSG=" T3 calibrated "
  {% else %}
  
  {% endif %} 

  
  
  {% if printer.configfile["T4.cfg"] and check_T0 == 1 %}
    T4
    _OFFSET_CALIBRATION_Z
     RESPOND TYPE=command MSG=" T4 calibrated "
  {% else %}
  {% endif %}


  
[gcode_macro _OFFSET_CALIBRATION_Z]   ## wahrscheilich behoben check backup 13.1.25 als referenz für das beschriebene problem(problem veränderter raw offset wird nicht gleich überschrieben t0 könnte falsch werden)
gcode:
  {% set active_tool = printer["gcode_macro VAR"].active_tool %}
  {% set referenz_offset_raw_z = printer["gcode_macro VAR"].referenz_offset_raw_z %}
  QUERY_ENDSTOPS
  G90

  RESPOND TYPE=command MSG=" x={printer.configfile.settings.safe_z_home.home_xy_position.0} " #to respond x value
  RESPOND TYPE=command MSG=" Y={printer.configfile.settings.safe_z_home.home_xy_position.1} " #to respond y value
  G1 X{printer.configfile.settings.safe_z_home.home_xy_position.0} Y{printer.configfile.settings.safe_z_home.home_xy_position.1} Z10 #check if variable is working
  {% set a = 75 %}
  RESPOND TYPE=command MSG=" {a} "
  {% for i in range(a) %}
    QUERY_ENDSTOPS
    _IF_CALIBRATION
  {% endfor %}
  G91 
  G1 Z+0.5
  G90
  {% for i in range(60) %}
    QUERY_ENDSTOPS
    _IF_CALIBRATION_FINE
  {% endfor %}
  GET_POSITION
  {% set position = printer.toolhead.position.z %}
  RESPOND TYPE=command MSG=" {position} "
  RESPOND TYPE=command MSG=" toolnumber= {active_tool} "
  {% if printer["gcode_macro VAR"].active_tool == 0 %}
    {% set referenz_offset_raw_z = position %}
    SET_GCODE_VARIABLE MACRO=VAR VARIABLE=referenz_offset_raw_z VALUE={referenz_offset_raw_z}
  {% else %}
    {% set offset_raw_z = position %}
    {% set final_offset = offset_raw_z - referenz_offset_raw_z %}
  {% endif %}
  
  {% if active_tool == 0 %}
  SET_GCODE_VARIABLE MACRO=TC_CONFIG VARIABLE=t0_offset_z VALUE=0
  RESPOND TYPE=command MSG=" offset_z_t0= {printer["gcode_macro TC_CONFIG"].t0_offset_z} "
  
  {% elif active_tool == 1 %}
  SET_GCODE_VARIABLE MACRO=TC_CONFIG VARIABLE=t1_offset_z VALUE={final_offset}
  RESPOND TYPE=command MSG=" offset_z_t1= {printer["gcode_macro TC_CONFIG"].t1_offset_z} "

  {% elif active_tool == 2 %}
  SET_GCODE_VARIABLE MACRO=TC_CONFIG VARIABLE=t2_offset_z VALUE={final_offset}
  RESPOND TYPE=command MSG=" offset_z_t2= {printer["gcode_macro TC_CONFIG"].t2_offset_z} "
  

  {% elif active_tool == 3 %}
  SET_GCODE_VARIABLE MACRO=TC_CONFIG VARIABLE=t3_offset_z VALUE={final_offset}
  RESPOND TYPE=command MSG=" offset_z_t3= {printer["gcode_macro TC_CONFIG"].t3_offset_z} "
  

  {% elif active_tool == 4 %}
  SET_GCODE_VARIABLE MACRO=TC_CONFIG VARIABLE=t4_offset_z VALUE={final_offset}
  RESPOND TYPE=command MSG=" offset_z_t4= {printer["gcode_macro TC_CONFIG"].t4_offset_z} "
  
  {% endif %}



[gcode_macro _IF_CALIBRATION]
gcode:
    {% if printer.query_endstops.last_query["z"] == 0 %} #checks if endstop is triggered
      G91
      G1 Z-0.2
      G90
    {% else %}
    {% endif %}  

[gcode_macro _IF_CALIBRATION_FINE]
gcode:
  {% if printer.query_endstops.last_query["z"] == 0 %} # checks if endstop is triggered
      G91
      G1 Z-0.01
      G90
  {% else %}
  {% endif %}
