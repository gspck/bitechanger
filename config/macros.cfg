[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("0")|int %}

  # Homes the printer and sets absolute positioning
  
  G28                   # Full home (XYZ)
  G90                   # Absolut position
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}

    G1 X120 Y120 Z5 F9000                  # Goes to center of the bed
    M190 S110 
     M106 S255
    # Sets target temp for the bed
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    M190 S{target_bed} 
  # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 5min soak.
  {% else %}
    #G1 X{x_wait} Y{y_wait} Z15 F9000                # Goes to center of the bed
    #SMART_PARK
    G1 X125 Y5 F9000
    #{% if target_bed - 5 < printer.heater_bed.temperature  %}
     # M190 S{target_bed}    
     # G4 P60000
     # {% else %}
      M190 S{target_bed}                              # Sets target temp for the bed
      G4 P120000                                      # Waits 5 min for the bedtemp to stabilize
     # {% endif %}
  {% endif %}
 
  # Heats up the nozzle up to target via slicer
  M107                                              # Turns off the PT-fan
  Z_TILT_ADJUST
  BED_MESH_CALIBRATE
 # SMART_PARK
  G1 X125 Y5 F9000
  M109 S{target_extruder} # Heats the nozzle to your print temp
  G1 E-5
  G28
  G1 E0
  G92 E0

[gcode_macro PRINT_END]
gcode:
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
  G91
    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

  G0 Z{z_safe} F3600             ; move nozzle up
  DOCK_TOOL
  G90
  M104 S0
  M140 S0
  G1 X125 Y250 F6000

  # Create a purge line and starts the print
 #LINE_PURGE

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}




[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
  {% set active_tool = printer["gcode_macro VAR"].active_tool %}
  {% if active_tool == 5 %}
  _BED_MESH_CALIBRATE
  {% else %}
  dock_tool
  _BED_MESH_CALIBRATE
  {% endif %}

[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST
gcode:
  {% set active_tool = printer["gcode_macro VAR"].active_tool %}
  {% if active_tool == 5 %}
    _Z_TILT_ADJUST
  {% else %}
  dock_tool
  _Z_TILT_ADJUST
  {% endif %}

[gcode_macro test_dock]
gcode:
  G1 X1.75 Y0 Z10 F6000
  G1 X1.75 Y-80
  G1 X1.75 Y-92.5 F3000
  SET_SERVO SERVO=TC_SERVO ANGLE=40
  G1 X1.75 Y-60 F1000
  G1 X1.75 Y0   F6000
  G1 x1.75 Y-60 F6000
  G1 X1.75 Y-92.5  F3000
  SET_SERVO SERVO=TC_SERVO ANGLE=0
  G4 P200
  G1 X1.75 Y-80
  G1 X1.75 Y0 F6000
  


[gcode_macro LOAD_FILAMENT]
gcode:
  M83
  G92 E0
  {% set TEMP = params.temp|default(220) %}
  M109 S{TEMP}
  G1 E65 F{params.SPEEDTRAVEL}
  G1 E15 F300
  G1 E15 F300
  G1 E-4 F900

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83
  G92 E0
  {% set TEMP = params.temp|default(220) %}
  M109 S{TEMP}
  G1 E12 F{params.SPEEDPURGE}
  G1 E-12
  G1 E-75 F{params.SPEEDTRAVEL}

[gcode_macro set_temp]
gcode:
  M83
  G92 E0
  {% set TEMP = params.TEMP|default(220)|int  %}
  M109 S{TEMP}

#[gcode_macro z_tilt_adjust]
#rename_existing:_z_tilt_adjust
#gcode:
 # Dock tool
 # _z_tilt_adjust
#  pick_up_tool
  

#[gcode_macro _GET_OFFSETS]
#gcode:  
 # {% for i in range(1) %}
  #QUERY_ENDSTOPS
  #M117 {printer.query_endstops.endstop[x]} 
#  RESPOND TYPE=command MSG=" {printer.query_endstops.last_query["x"]} "
#  {% endfor %}
#
#[gcode_macro _GET_OFFSETS_ENTRY]
#gcode:
 # QUERY_ENDSTOPS
  #_GET_OFFSETS

[gcode_macro VARIABLES]
variable_endstop_triggered: 0
variable_offset_t1: 1.98
variable_offset_t2: 1.45
variable_offset_t3: 1.31
variable_offset_t4: 0.78
variable_active_tool: 5
gcode:

[delayed_gcode welcome]
initial_duration: 1
gcode: 
  {% set svv = printer.save_variables.variables %}
  {% set active = svv.active_tool %}
   RESPOND TYPE=command MSG=" {svv.active_tool} "
  SET_GCODE_VARIABLE MACRO=VAR VARIABLE=active_tool VALUE={active}
#[gcode_macro _OFFSET_CALIBRATION_ENTRY]
#gcode:
#  QUERY_ENDSTOPS
 # _OFFSET_CALIBRATION_MAIN

#[gcode_macro _OFFSET_CALIBRATION_MAIN]
#gcode:
  #RESPOND TYPE=command MSG=" toolnumber={printer["gcode_macro VARIABLES"].active_tool} "
  #{% if printer.query_endstops.last_query["x"] == 0 %}
   # G91
  #  G1 X-1
  #  G90
 #   _OFFSET_CALIBRATION_AUX
 # {% else %}
 # GET_POSITION
 # {% endif %}


#[gcode_macro _OFFSET_CALIBRATION_AUX]
#gcode:
  #QUERY_ENDSTOPS
 # _OFFSET_CALIBRATION_MAIN

[gcode_macro GET_OFFSETS]
gcode:
  #XY Calibration

  #Z Calibration
  
  




[gcode_macro _OFFSET_CALIBRATION_Z]
variable_referenz_offset_raw_z=0
variable_offset_raw_z=0

gcode:
  QUERY_ENDSTOPS
  G90
  G1 X-27
  {% set a = 25 %}
  RESPOND TYPE=command MSG=" {a} "
  {% for i in range(a) %}
    QUERY_ENDSTOPS
    _IF_CALIBRATION
  {% endfor %}
  G91 
  G1 X+0.5
  G90
  {% for i in range(60) %}
    QUERY_ENDSTOPS
    _IF_CALIBRATION_FINE
  {% endfor %}
  GET_POSITION
  {% set position = printer.toolhead.position.x %}
  RESPOND TYPE=command MSG=" {position} "
  RESPOND TYPE=command MSG=" toolnumber= {printer["gcode_macro VARIABLES"].active_tool} "
  {% if printer["gcode_macro VARIABLES"].active_tool == 0 %}
    SET_GCODE_VARIABLE MACRO=_OFFSET_CALIBRATION_Z VARIABLE=referenz_offset_raw_z VALUE={position}
  {% endif %}
  SET_GCODE_VARIABLE MACRO= VARIABLE=offset_raw_z VALUE={position}
  RESPOND TYPE=command MSG=" referenz={printer["gcode_macro _OFFSET_CALIBRATION_Z"].referenz_offset_raw_z} "
  RESPOND TYPE=command MSG=" acctive tool={printer["gcode_macro _OFFSET_CALIBRATION_Z"].referenz_offset_raw_z} "

[gcode_macro _IF_CALIBRATION]
gcode:
    {% if printer.query_endstops.last_query["x"] == 0 %}
      G91
      G1 X-0.5
      G90
    {% else %}
    {% endif %}  

[gcode_macro _IF_CALIBRATION_FINE]
gcode:
  {% if printer.query_endstops.last_query["x"] == 0 %}
      G91
      G1 X-0.01
      G90
  {% else %}
  {% endif %}



    
